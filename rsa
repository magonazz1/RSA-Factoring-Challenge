#!/usr/bin/env python3

"""Factor RSA numbers into two prime numbers.

This script reads a file containing RSA numbers and factors each number
into two prime numbers. It then prints the factorizations in the format "n=p*q"
for each number.

Usage: rsa <file>
where <file> is a file containing RSA numbers to factor, one per line.

You can assume that all lines will be valid RSA numbers.
RSA numbers are a product of two prime numbers, and this script aims to find
those two prime factors.

Your program should run without any dependency, and it will be killed after 5
seconds if it hasnâ€™t finished.

Push all your scripts, source code, etc., to your repository.

We will only run your executable 'rsa'.

"""

import sys

def is_prime(num):
    """Check if a number is prime."""
    if num < 2:
        return False
    for i in range(2, int(num**0.5) + 1):
        if num % i == 0:
            return False
    return True

def factorize(n):
    """Factorize an RSA number into two prime numbers."""
    for p in range(2, n):
        if n % p == 0 and is_prime(p):
            q = n // p
            if is_prime(q):
                return p, q
    return None, None

def main(file_path):
    """Main function to factorize RSA numbers and print the results."""
    try:
        with open(file_path, 'r') as file:
            lines = file.read().splitlines()
            for line in lines:
                number = int(line)
                p, q = factorize(number)
                if p and q:
                    print(f"{number} = {p} * {q}")
                else:
                    print(f"Unable to factorize {number}.")
    except FileNotFoundError:
        print(f"File '{file_path}' not found.")
    except ValueError:
        print("Invalid input in the file. The number must be a positive integer.")

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("Usage: rsa <file>")
    else:
        file_path = sys.argv[1]
        main(file_path)
